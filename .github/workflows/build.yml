name: Build & Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  linux:
    strategy:
      fail-fast: false
      matrix:
        cc: [gcc, clang]
        build_type: [Debug, Release]
    runs-on: ubuntu-latest
    env:
      CC:  ${{ matrix.cc }}
      CXX: ${{ matrix.cc == 'gcc' && 'g++' || 'clang++' }}
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Install distro dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake \
            build-essential \
            ninja-build extra-cmake-modules \
            libfcitx5core-dev libfcitx5utils-dev libfcitx5config-dev \
            libsqlite3-dev qt6-base-dev qt6-base-dev-tools libicu-dev \
            gettext appstream

      - name: Configure
        run: |
          cmake -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_INSTALL_PREFIX=/usr \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Build
        run: cmake --build build

      - name: Stage install files into dist/ directory
        run: DESTDIR=dist cmake --install build

      - name: Upload build artefacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.cc }}-${{ matrix.build_type }}
          path: dist/

