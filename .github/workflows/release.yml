name: Release

on:
  push:
    tags: ['v*']

permissions:
  contents: write

jobs:
  source:
    runs-on: ubuntu-latest
    outputs:
      tarball: ${{ steps.src.outputs.tarball }}
      version: ${{ steps.src.outputs.version }}
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - id: version
        run: echo "version=$(cat version.txt)" >> "$GITHUB_OUTPUT"
      - name: Update metainfo
        run: ./update-metainfo.sh
      - id: src
        run: |
          VER=${GITHUB_REF_NAME#v}
          TAR="fcitx5-lekhika-${VER}.tar.gz"
          # Create a source tarball that includes the submodule content
          git archive --format=tar --prefix="fcitx5-lekhika-${VER}/" HEAD | (cd liblekhika && git archive --format=tar --prefix="fcitx5-lekhika-${VER}/liblekhika/" HEAD) | gzip > "$TAR"
          echo "tarball=$TAR" >> "$GITHUB_OUTPUT"
      - uses: actions/upload-artifact@v4
        with:
          name: source-tarball
          path: ${{ steps.src.outputs.tarball }}

  deb:
    needs: source
    runs-on: ${{ matrix.distro }}
    strategy:
      matrix:
        distro: [ubuntu-22.04, ubuntu-latest]
    steps:
      - name: install build-deps
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential dpkg-dev debhelper devscripts \
            cmake ninja-build extra-cmake-modules \
            libfcitx5core-dev libfcitx5utils-dev libfcitx5config-dev \
            libsqlite3-dev qt6-base-dev libicu-dev
      - uses: actions/download-artifact@v4
        with:
          name: source-tarball
      - name: Build debian package
        run: |
          mkdir pkg && tar -xf *.tar.gz -C pkg --strip-components=1
          cd pkg
          mkdir -p debian
          # control file to define the two final packages
          {
            echo 'Source: fcitx5-lekhika'
            echo 'Section: utils'
            echo 'Priority: optional'
            echo 'Maintainer: KHUMNATH CG<nath.khum@gmail.com>'
            echo 'Build-Depends: debhelper-compat (= 13), cmake, ninja-build, extra-cmake-modules,'
            echo ' libfcitx5core-dev, libfcitx5utils-dev, libfcitx5config-dev,'
            echo ' libsqlite3-dev, qt6-base-dev, libicu-dev'
            echo 'Standards-Version: 4.6.0'
            echo ''
            echo 'Package: fcitx5-lekhika'
            echo 'Architecture: any'
            echo 'Depends: ${shlibs:Depends}, ${misc:Depends}, libfcitx5-qt1, libsqlite3-0, libicu70 | libicu71, libqt6core6'
            echo 'Description: Lekhika input-method addon for Fcitx5 (with bundled liblekhika)'
            echo ''
            echo 'Package: lekhika-trainer'
            echo 'Architecture: any'
            echo 'Depends: ${shlibs:Depends}, ${misc:Depends}, libqt6widgets6t64 | libqt6widgets6'
            echo 'Description: GUI training tool for fcitx5-lekhika'
          } > debian/control
          
          # .install file for the main IME package, including liblekhika files
          {
            echo 'usr/lib/*/liblekhika.so.*'
            echo 'usr/share/lekhika-core/*'
            echo 'usr/lib/*/fcitx5/fcitx5lekhika.so'
            echo 'usr/share/fcitx5/addon/fcitx5lekhika.conf'
            echo 'usr/share/fcitx5/inputmethod/fcitx5lekhika.conf'
            echo 'usr/share/metainfo/fcitx5-lekhika.metainfo.xml'
          } > debian/fcitx5-lekhika.install

          # .install file for the trainer GUI
          {
            echo 'usr/bin/lekhika-trainer'
            echo 'usr/share/applications/lekhika-trainer.desktop'
            echo 'usr/share/icons/hicolor/*/apps/*'
            echo 'usr/share/metainfo/lekhika-trainer.metainfo.xml'
          } > debian/lekhika-trainer.install

          printf '#!/usr/bin/make -f\n%%:\n\tdh $@ --buildsystem=cmake+ninja\noverride_dh_auto_configure:\n\tdh_auto_configure -- -DCMAKE_BUILD_TYPE=Release\noverride_dh_auto_test:\n' > debian/rules
          chmod +x debian/rules
          
          export DEBEMAIL=nath.khum@gmail.com DEBFULLNAME="KHUMNATH CG"
          VER=${{ needs.source.outputs.version }}
          dch --create -v "${VER}-1" --package fcitx5-lekhika "CI build"
          dpkg-buildpackage -b -uc -us
      - name: Remove debug packages
        run: rm -f ./*.ddeb
      - name: Add t64 suffix for latest ubuntu build
        if: matrix.distro == 'ubuntu-latest'
        run: |
          shopt -s nullglob
          for f in *.deb; do
            mv -- "$f" "${f%.deb}_t64.deb"
          done
      - uses: actions/upload-artifact@v4
        with:
          name: debian-packages-${{ matrix.distro }}
          path: "*.deb"

  rpm-fedora:
    needs: source
    runs-on: ubuntu-latest
    container: fedora:39
    steps:
      - run: |
          dnf install -y rpm-build cmake ninja-build gcc-c++ \
            fcitx5-devel qt6-qtbase-devel sqlite-devel libicu-devel qt6-qtwidgets-devel
      - uses: actions/download-artifact@v4
        with:
          name: source-tarball
      - run: |
          VER=${{ needs.source.outputs.version }}
          mkdir -p ~/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
          cp *.tar.gz ~/rpmbuild/SOURCES/
          {
            echo "Name:           fcitx5-lekhika-meta" # A meta name for the spec file
            echo "Version:        ${VER}"
            echo "Release:        1%{?dist}"
            echo "Summary:        Lekhika input method for Fcitx5 and related tools"
            echo "License:        GPL-3.0+"
            echo "Source0:        fcitx5-lekhika-%{version}.tar.gz"
            echo "BuildRequires:  cmake, ninja-build, gcc-c++, fcitx5-devel, qt6-qtbase-devel, sqlite-devel, libicu-devel, qt6-qtwidgets-devel"
            echo "%description"
            echo "This package provides the fcitx5-lekhika input method and its GUI trainer."
            echo "%prep"
            echo "%autosetup -n fcitx5-lekhika-%{version}"
            echo "%build"
            echo "%cmake -DCMAKE_BUILD_TYPE=Release"
            echo "%cmake_build"
            echo "%install"
            echo "%cmake_install"
            
            echo "%package -n fcitx5-lekhika"
            echo "Summary:        Lekhika input method for Fcitx5 (with bundled liblekhika)"
            echo "Requires:       fcitx5-qt, sqlite, libicu"
            echo "%description -n fcitx5-lekhika"
            echo "The core fcitx5-lekhika addon with its bundled runtime library."
            echo "%files -n fcitx5-lekhika"
            echo "%{_libdir}/liblekhika.so.*"
            echo "/usr/share/lekhika-core/*"
            echo "%{_libdir}/fcitx5/*.so"
            echo "%{_datadir}/fcitx5/*"
            echo "%{_datadir}/metainfo/fcitx5-lekhika.metainfo.xml"

            echo "%package -n lekhika-trainer"
            echo "Summary:        GUI training tool for fcitx5-lekhika"
            echo "Requires:       fcitx5-lekhika = %{version}-%{release}, qt6-qtwidgets"
            echo "%description -n lekhika-trainer"
            echo "A Qt-based GUI to manage the lekhika dictionary."
            echo "%files -n lekhika-trainer"
            echo "%{_bindir}/lekhika-trainer"
            echo "%{_datadir}/applications/*.desktop"
            echo "%{_datadir}/icons/hicolor/*/apps/lekhika.*"
            echo "%{_datadir}/metainfo/lekhika-trainer.metainfo.xml"
          } > ~/rpmbuild/SPECS/lekhika.spec
          rpmbuild -bb ~/rpmbuild/SPECS/lekhika.spec
      - name: Remove debug packages
        run: rm -f ~/rpmbuild/RPMS/*/*-debug{info,source}-*.rpm
      - uses: actions/upload-artifact@v4
        with:
          name: fedora-rpms
          path: ~/rpmbuild/RPMS/*/*.rpm

  arch:
    needs: source
    runs-on: ubuntu-latest
    container: archlinux:latest
    steps:
      - run: pacman -Sy --noconfirm base-devel cmake ninja fcitx5-qt sqlite qt6-base icu qt6-widgets
      - uses: actions/download-artifact@v4
        with:
          name: source-tarball
      - run: |
          useradd -m builder
          mkdir arch_build
          mv *.tar.gz arch_build/
          chown -R builder:builder arch_build
          sudo -u builder \
            GITHUB_REPOSITORY=${{ github.repository }} \
            PKGVER=${{ needs.source.outputs.version }} \
            bash -c '
              set -e
              cd arch_build
              VER=$PKGVER
              {
                echo "pkgname=('fcitx5-lekhika' 'lekhika-trainer')"
                echo "pkgver=${VER}"
                echo "pkgrel=1"
                echo "arch=('x86_64')"
                echo "url=\"https://github.com/${GITHUB_REPOSITORY}\""
                echo "license=('GPL3')"
                echo "makedepends=('cmake' 'ninja')"
                echo "source=(\"fcitx5-lekhika-\${pkgver}.tar.gz\")"
                echo "sha256sums=(\"SKIP\")"
                echo "build() {"
                echo "  cd \"fcitx5-lekhika-\${pkgver}\""
                echo "  cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr"
                echo "  cmake --build build"
                echo "}"
                echo "package_fcitx5-lekhika() {"
                echo "  pkgdesc=\"Lekhika input method for Fcitx5 (with bundled liblekhika)\""
                echo "  depends=(\"fcitx5-qt\" \"sqlite\" \"icu\")"
                echo "  cd \"fcitx5-lekhika-\${pkgver}/build\""
                # Install all runtime components, then remove trainer parts
                echo "  DESTDIR=\"\$pkgdir\" cmake --install ."
                echo "  rm -rf \"\$pkgdir/usr/bin/lekhika-trainer\""
                echo "  rm -rf \"\$pkgdir/usr/share/applications/lekhika-trainer.desktop\""
                echo "  rm -rf \"\$pkgdir/usr/share/metainfo/lekhika-trainer.metainfo.xml\""
                echo "  rm -rf \"\$pkgdir/usr/bin/lekhika-cli\""
                echo "  rm -rf \"\$pkgdir/usr/include\""
                echo "  rm -rf \"\$pkgdir/usr/lib/cmake\""
                echo "}"
                echo "package_lekhika-trainer() {"
                echo "  pkgdesc=\"GUI training tool for fcitx5-lekhika\""
                echo "  depends=(\"fcitx5-lekhika=\${pkgver}\" \"qt6-widgets\")"
                echo "  cd \"fcitx5-lekhika-\${pkgver}/build\""
                echo "  DESTDIR=\"\$pkgdir\" cmake --install . --component Trainer"
                echo "}"
              } > PKGBUILD
              makepkg -f --noconfirm
            '
          mv arch_build/*.pkg.tar.zst .
      - uses: actions/upload-artifact@v4
        with:
          name: arch-packages
          path: "*.pkg.tar.zst"

  release:
    needs: [source, deb, rpm-fedora, arch]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
      - run: |
          mkdir release
          shopt -s nullglob globstar
          cp -v source-tarball/* release/
          cp -v debian-packages-*/* release/
          cp -v fedora-rpms/* release/
          cp -v arch-packages/* release/
          cd release
          sha2sum * > SHA256SUMS.txt
      - name: changelog
        run: |
          PREV=$(git describe --tags --abbrev=0 "$(git rev-list --tags --max-count=2)" | tail -n 1)
          if [ -n "$PREV" ]; then
            echo "### Changes since $PREV" > CHANGELOG.md
            git log --pretty=format:"- %s (%h)" "$PREV..HEAD" >> CHANGELOG.md
          else
            git log --pretty=format:"- %s (%h)" > CHANGELOG.md
          fi
      - name: create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
          body_path: CHANGELOG.md
          draft: false
          prerelease: false

